[
  {
    "problem": {
      "name": "easy",
      "robots": 1,
      "docks": 2,
      "containers": 3,
      "piles": 2
    },
    "heuristic": {
      "name": "fast-downward",
      "config": "fast-downward"
    },
    "runs": [
      {
        "run": 0,
        "success": true,
        "solve_time": 0.2114701271057129,
        "plan_length": 3,
        "status": "PlanGenerationResultStatus.SOLVED_SATISFICING"
      },
      {
        "run": 1,
        "success": true,
        "solve_time": 0.17613506317138672,
        "plan_length": 3,
        "status": "PlanGenerationResultStatus.SOLVED_SATISFICING"
      },
      {
        "run": 2,
        "success": true,
        "solve_time": 0.17705488204956055,
        "plan_length": 3,
        "status": "PlanGenerationResultStatus.SOLVED_SATISFICING"
      }
    ],
    "summary": {
      "success_rate": 1.0,
      "avg_solve_time": 0.18822002410888672,
      "std_solve_time": 0.02014043156723386,
      "avg_plan_length": 3,
      "std_plan_length": 0.0,
      "min_solve_time": 0.17613506317138672,
      "max_solve_time": 0.2114701271057129
    }
  },
  {
    "problem": {
      "name": "easy",
      "robots": 1,
      "docks": 2,
      "containers": 3,
      "piles": 2
    },
    "heuristic": {
      "name": "pyperplan",
      "config": "pyperplan"
    },
    "runs": [
      {
        "run": 0,
        "success": false,
        "solve_time": Infinity,
        "plan_length": 0,
        "status": "ERROR: In precondition: ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot)))) of action: action pickup(Robot robot, Container container, Pile pile, Dock dock) {\n    preconditions = [\n      robot_at(robot, dock)\n      pile_at_dock(pile, dock)\n      container_in_pile(container, pile)\n      container_on_top_of_pile(container, pile)\n      ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot))))\n      ((container_weight_2(container) and robot_weight_0(robot)) or (container_weight_2(container) and robot_weight_2(robot)) or (container_weight_2(container) and robot_weight_4(robot)) or (container_weight_4(container) and robot_weight_0(robot)) or (container_weight_4(container) and robot_weight_2(robot)) or (container_weight_6(container) and robot_weight_0(robot)))\n    ]\n    effects = [\n      robot_carrying(robot, container) := true\n      container_in_pile(container, pile) := false\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then container_in_robot_slot_1(robot, container) := true\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then robot_has_container_1(robot) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then container_in_robot_slot_2(robot, container) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then robot_has_container_2(robot) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then container_in_robot_slot_3(robot, container) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then robot_has_container_3(robot) := true\n      if (robot_has_container_1(robot) or robot_has_container_2(robot) or robot_has_container_3(robot)) then robot_free(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_2(robot) := true\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_4(robot) := true\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_4(robot) := false\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_6(robot) := true\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_4(robot) := true\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_6(robot) := true\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_6(robot) := true\n      container_on_top_of_pile(container, pile) := false\n      if container_under_in_pile(c1, container, pile) then container_on_top_of_pile(c1, pile) := true\n      if container_under_in_pile(c1, container, pile) then container_under_in_pile(c1, container, pile) := false\n      if container_under_in_pile(c2, container, pile) then container_on_top_of_pile(c2, pile) := true\n      if container_under_in_pile(c2, container, pile) then container_under_in_pile(c2, container, pile) := false\n      if container_under_in_pile(c3, container, pile) then container_on_top_of_pile(c3, pile) := true\n      if container_under_in_pile(c3, container, pile) then container_under_in_pile(c3, container, pile) := false\n    ]\n  } is not an AND or a FLUENT"
      },
      {
        "run": 1,
        "success": false,
        "solve_time": Infinity,
        "plan_length": 0,
        "status": "ERROR: In precondition: ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot)))) of action: action pickup(Robot robot, Container container, Pile pile, Dock dock) {\n    preconditions = [\n      robot_at(robot, dock)\n      pile_at_dock(pile, dock)\n      container_in_pile(container, pile)\n      container_on_top_of_pile(container, pile)\n      ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot))))\n      ((container_weight_2(container) and robot_weight_0(robot)) or (container_weight_2(container) and robot_weight_2(robot)) or (container_weight_2(container) and robot_weight_4(robot)) or (container_weight_4(container) and robot_weight_0(robot)) or (container_weight_4(container) and robot_weight_2(robot)) or (container_weight_6(container) and robot_weight_0(robot)))\n    ]\n    effects = [\n      robot_carrying(robot, container) := true\n      container_in_pile(container, pile) := false\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then container_in_robot_slot_1(robot, container) := true\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then robot_has_container_1(robot) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then container_in_robot_slot_2(robot, container) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then robot_has_container_2(robot) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then container_in_robot_slot_3(robot, container) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then robot_has_container_3(robot) := true\n      if (robot_has_container_1(robot) or robot_has_container_2(robot) or robot_has_container_3(robot)) then robot_free(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_2(robot) := true\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_4(robot) := true\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_4(robot) := false\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_6(robot) := true\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_4(robot) := true\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_6(robot) := true\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_6(robot) := true\n      container_on_top_of_pile(container, pile) := false\n      if container_under_in_pile(c1, container, pile) then container_on_top_of_pile(c1, pile) := true\n      if container_under_in_pile(c1, container, pile) then container_under_in_pile(c1, container, pile) := false\n      if container_under_in_pile(c2, container, pile) then container_on_top_of_pile(c2, pile) := true\n      if container_under_in_pile(c2, container, pile) then container_under_in_pile(c2, container, pile) := false\n      if container_under_in_pile(c3, container, pile) then container_on_top_of_pile(c3, pile) := true\n      if container_under_in_pile(c3, container, pile) then container_under_in_pile(c3, container, pile) := false\n    ]\n  } is not an AND or a FLUENT"
      },
      {
        "run": 2,
        "success": false,
        "solve_time": Infinity,
        "plan_length": 0,
        "status": "ERROR: In precondition: ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot)))) of action: action pickup(Robot robot, Container container, Pile pile, Dock dock) {\n    preconditions = [\n      robot_at(robot, dock)\n      pile_at_dock(pile, dock)\n      container_in_pile(container, pile)\n      container_on_top_of_pile(container, pile)\n      ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot))))\n      ((container_weight_2(container) and robot_weight_0(robot)) or (container_weight_2(container) and robot_weight_2(robot)) or (container_weight_2(container) and robot_weight_4(robot)) or (container_weight_4(container) and robot_weight_0(robot)) or (container_weight_4(container) and robot_weight_2(robot)) or (container_weight_6(container) and robot_weight_0(robot)))\n    ]\n    effects = [\n      robot_carrying(robot, container) := true\n      container_in_pile(container, pile) := false\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then container_in_robot_slot_1(robot, container) := true\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then robot_has_container_1(robot) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then container_in_robot_slot_2(robot, container) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then robot_has_container_2(robot) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then container_in_robot_slot_3(robot, container) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then robot_has_container_3(robot) := true\n      if (robot_has_container_1(robot) or robot_has_container_2(robot) or robot_has_container_3(robot)) then robot_free(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_2(robot) := true\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_4(robot) := true\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_4(robot) := false\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_6(robot) := true\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_4(robot) := true\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_6(robot) := true\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_6(robot) := true\n      container_on_top_of_pile(container, pile) := false\n      if container_under_in_pile(c1, container, pile) then container_on_top_of_pile(c1, pile) := true\n      if container_under_in_pile(c1, container, pile) then container_under_in_pile(c1, container, pile) := false\n      if container_under_in_pile(c2, container, pile) then container_on_top_of_pile(c2, pile) := true\n      if container_under_in_pile(c2, container, pile) then container_under_in_pile(c2, container, pile) := false\n      if container_under_in_pile(c3, container, pile) then container_on_top_of_pile(c3, pile) := true\n      if container_under_in_pile(c3, container, pile) then container_under_in_pile(c3, container, pile) := false\n    ]\n  } is not an AND or a FLUENT"
      }
    ],
    "summary": {
      "success_rate": 0,
      "avg_solve_time": Infinity,
      "std_solve_time": 0,
      "avg_plan_length": 0,
      "std_plan_length": 0,
      "min_solve_time": Infinity,
      "max_solve_time": 0
    }
  },
  {
    "problem": {
      "name": "medium",
      "robots": 2,
      "docks": 3,
      "containers": 5,
      "piles": 3
    },
    "heuristic": {
      "name": "fast-downward",
      "config": "fast-downward"
    },
    "runs": [
      {
        "run": 0,
        "success": true,
        "solve_time": 0.26709914207458496,
        "plan_length": 9,
        "status": "PlanGenerationResultStatus.SOLVED_SATISFICING"
      },
      {
        "run": 1,
        "success": true,
        "solve_time": 0.2727470397949219,
        "plan_length": 9,
        "status": "PlanGenerationResultStatus.SOLVED_SATISFICING"
      },
      {
        "run": 2,
        "success": true,
        "solve_time": 0.26389026641845703,
        "plan_length": 9,
        "status": "PlanGenerationResultStatus.SOLVED_SATISFICING"
      }
    ],
    "summary": {
      "success_rate": 1.0,
      "avg_solve_time": 0.2679121494293213,
      "std_solve_time": 0.004484009854990914,
      "avg_plan_length": 9,
      "std_plan_length": 0.0,
      "min_solve_time": 0.26389026641845703,
      "max_solve_time": 0.2727470397949219
    }
  },
  {
    "problem": {
      "name": "medium",
      "robots": 2,
      "docks": 3,
      "containers": 5,
      "piles": 3
    },
    "heuristic": {
      "name": "pyperplan",
      "config": "pyperplan"
    },
    "runs": [
      {
        "run": 0,
        "success": false,
        "solve_time": Infinity,
        "plan_length": 0,
        "status": "ERROR: In precondition: ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot)))) of action: action pickup(Robot robot, Container container, Pile pile, Dock dock) {\n    preconditions = [\n      robot_at(robot, dock)\n      pile_at_dock(pile, dock)\n      container_in_pile(container, pile)\n      container_on_top_of_pile(container, pile)\n      ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot))))\n      ((container_weight_2(container) and robot_weight_0(robot)) or (container_weight_2(container) and robot_weight_2(robot)) or (container_weight_2(container) and robot_weight_4(robot)) or (container_weight_4(container) and robot_weight_0(robot)) or (container_weight_4(container) and robot_weight_2(robot)) or (container_weight_6(container) and robot_weight_0(robot)))\n    ]\n    effects = [\n      robot_carrying(robot, container) := true\n      container_in_pile(container, pile) := false\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then container_in_robot_slot_1(robot, container) := true\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then robot_has_container_1(robot) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then container_in_robot_slot_2(robot, container) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then robot_has_container_2(robot) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then container_in_robot_slot_3(robot, container) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then robot_has_container_3(robot) := true\n      if (robot_has_container_1(robot) or robot_has_container_2(robot) or robot_has_container_3(robot)) then robot_free(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_2(robot) := true\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_4(robot) := true\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_4(robot) := false\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_6(robot) := true\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_4(robot) := true\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_6(robot) := true\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_6(robot) := true\n      container_on_top_of_pile(container, pile) := false\n      if container_under_in_pile(c1, container, pile) then container_on_top_of_pile(c1, pile) := true\n      if container_under_in_pile(c1, container, pile) then container_under_in_pile(c1, container, pile) := false\n      if container_under_in_pile(c2, container, pile) then container_on_top_of_pile(c2, pile) := true\n      if container_under_in_pile(c2, container, pile) then container_under_in_pile(c2, container, pile) := false\n      if container_under_in_pile(c3, container, pile) then container_on_top_of_pile(c3, pile) := true\n      if container_under_in_pile(c3, container, pile) then container_under_in_pile(c3, container, pile) := false\n      if container_under_in_pile(c4, container, pile) then container_on_top_of_pile(c4, pile) := true\n      if container_under_in_pile(c4, container, pile) then container_under_in_pile(c4, container, pile) := false\n      if container_under_in_pile(c5, container, pile) then container_on_top_of_pile(c5, pile) := true\n      if container_under_in_pile(c5, container, pile) then container_under_in_pile(c5, container, pile) := false\n    ]\n  } is not an AND or a FLUENT"
      },
      {
        "run": 1,
        "success": false,
        "solve_time": Infinity,
        "plan_length": 0,
        "status": "ERROR: In precondition: ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot)))) of action: action pickup(Robot robot, Container container, Pile pile, Dock dock) {\n    preconditions = [\n      robot_at(robot, dock)\n      pile_at_dock(pile, dock)\n      container_in_pile(container, pile)\n      container_on_top_of_pile(container, pile)\n      ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot))))\n      ((container_weight_2(container) and robot_weight_0(robot)) or (container_weight_2(container) and robot_weight_2(robot)) or (container_weight_2(container) and robot_weight_4(robot)) or (container_weight_4(container) and robot_weight_0(robot)) or (container_weight_4(container) and robot_weight_2(robot)) or (container_weight_6(container) and robot_weight_0(robot)))\n    ]\n    effects = [\n      robot_carrying(robot, container) := true\n      container_in_pile(container, pile) := false\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then container_in_robot_slot_1(robot, container) := true\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then robot_has_container_1(robot) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then container_in_robot_slot_2(robot, container) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then robot_has_container_2(robot) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then container_in_robot_slot_3(robot, container) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then robot_has_container_3(robot) := true\n      if (robot_has_container_1(robot) or robot_has_container_2(robot) or robot_has_container_3(robot)) then robot_free(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_2(robot) := true\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_4(robot) := true\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_4(robot) := false\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_6(robot) := true\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_4(robot) := true\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_6(robot) := true\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_6(robot) := true\n      container_on_top_of_pile(container, pile) := false\n      if container_under_in_pile(c1, container, pile) then container_on_top_of_pile(c1, pile) := true\n      if container_under_in_pile(c1, container, pile) then container_under_in_pile(c1, container, pile) := false\n      if container_under_in_pile(c2, container, pile) then container_on_top_of_pile(c2, pile) := true\n      if container_under_in_pile(c2, container, pile) then container_under_in_pile(c2, container, pile) := false\n      if container_under_in_pile(c3, container, pile) then container_on_top_of_pile(c3, pile) := true\n      if container_under_in_pile(c3, container, pile) then container_under_in_pile(c3, container, pile) := false\n      if container_under_in_pile(c4, container, pile) then container_on_top_of_pile(c4, pile) := true\n      if container_under_in_pile(c4, container, pile) then container_under_in_pile(c4, container, pile) := false\n      if container_under_in_pile(c5, container, pile) then container_on_top_of_pile(c5, pile) := true\n      if container_under_in_pile(c5, container, pile) then container_under_in_pile(c5, container, pile) := false\n    ]\n  } is not an AND or a FLUENT"
      },
      {
        "run": 2,
        "success": false,
        "solve_time": Infinity,
        "plan_length": 0,
        "status": "ERROR: In precondition: ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot)))) of action: action pickup(Robot robot, Container container, Pile pile, Dock dock) {\n    preconditions = [\n      robot_at(robot, dock)\n      pile_at_dock(pile, dock)\n      container_in_pile(container, pile)\n      container_on_top_of_pile(container, pile)\n      ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot))))\n      ((container_weight_2(container) and robot_weight_0(robot)) or (container_weight_2(container) and robot_weight_2(robot)) or (container_weight_2(container) and robot_weight_4(robot)) or (container_weight_4(container) and robot_weight_0(robot)) or (container_weight_4(container) and robot_weight_2(robot)) or (container_weight_6(container) and robot_weight_0(robot)))\n    ]\n    effects = [\n      robot_carrying(robot, container) := true\n      container_in_pile(container, pile) := false\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then container_in_robot_slot_1(robot, container) := true\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then robot_has_container_1(robot) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then container_in_robot_slot_2(robot, container) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then robot_has_container_2(robot) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then container_in_robot_slot_3(robot, container) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then robot_has_container_3(robot) := true\n      if (robot_has_container_1(robot) or robot_has_container_2(robot) or robot_has_container_3(robot)) then robot_free(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_2(robot) := true\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_4(robot) := true\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_4(robot) := false\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_6(robot) := true\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_4(robot) := true\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_6(robot) := true\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_6(robot) := true\n      container_on_top_of_pile(container, pile) := false\n      if container_under_in_pile(c1, container, pile) then container_on_top_of_pile(c1, pile) := true\n      if container_under_in_pile(c1, container, pile) then container_under_in_pile(c1, container, pile) := false\n      if container_under_in_pile(c2, container, pile) then container_on_top_of_pile(c2, pile) := true\n      if container_under_in_pile(c2, container, pile) then container_under_in_pile(c2, container, pile) := false\n      if container_under_in_pile(c3, container, pile) then container_on_top_of_pile(c3, pile) := true\n      if container_under_in_pile(c3, container, pile) then container_under_in_pile(c3, container, pile) := false\n      if container_under_in_pile(c4, container, pile) then container_on_top_of_pile(c4, pile) := true\n      if container_under_in_pile(c4, container, pile) then container_under_in_pile(c4, container, pile) := false\n      if container_under_in_pile(c5, container, pile) then container_on_top_of_pile(c5, pile) := true\n      if container_under_in_pile(c5, container, pile) then container_under_in_pile(c5, container, pile) := false\n    ]\n  } is not an AND or a FLUENT"
      }
    ],
    "summary": {
      "success_rate": 0,
      "avg_solve_time": Infinity,
      "std_solve_time": 0,
      "avg_plan_length": 0,
      "std_plan_length": 0,
      "min_solve_time": Infinity,
      "max_solve_time": 0
    }
  },
  {
    "problem": {
      "name": "hard",
      "robots": 2,
      "docks": 4,
      "containers": 8,
      "piles": 4
    },
    "heuristic": {
      "name": "fast-downward",
      "config": "fast-downward"
    },
    "runs": [
      {
        "run": 0,
        "success": true,
        "solve_time": 0.48669886589050293,
        "plan_length": 8,
        "status": "PlanGenerationResultStatus.SOLVED_SATISFICING"
      },
      {
        "run": 1,
        "success": true,
        "solve_time": 0.4496948719024658,
        "plan_length": 8,
        "status": "PlanGenerationResultStatus.SOLVED_SATISFICING"
      },
      {
        "run": 2,
        "success": true,
        "solve_time": 0.4446573257446289,
        "plan_length": 8,
        "status": "PlanGenerationResultStatus.SOLVED_SATISFICING"
      }
    ],
    "summary": {
      "success_rate": 1.0,
      "avg_solve_time": 0.46035035451253253,
      "std_solve_time": 0.022957074219058494,
      "avg_plan_length": 8,
      "std_plan_length": 0.0,
      "min_solve_time": 0.4446573257446289,
      "max_solve_time": 0.48669886589050293
    }
  },
  {
    "problem": {
      "name": "hard",
      "robots": 2,
      "docks": 4,
      "containers": 8,
      "piles": 4
    },
    "heuristic": {
      "name": "pyperplan",
      "config": "pyperplan"
    },
    "runs": [
      {
        "run": 0,
        "success": false,
        "solve_time": Infinity,
        "plan_length": 0,
        "status": "ERROR: In precondition: ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot)))) of action: action pickup(Robot robot, Container container, Pile pile, Dock dock) {\n    preconditions = [\n      robot_at(robot, dock)\n      pile_at_dock(pile, dock)\n      container_in_pile(container, pile)\n      container_on_top_of_pile(container, pile)\n      ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot))))\n      ((container_weight_2(container) and robot_weight_0(robot)) or (container_weight_2(container) and robot_weight_2(robot)) or (container_weight_2(container) and robot_weight_4(robot)) or (container_weight_4(container) and robot_weight_0(robot)) or (container_weight_4(container) and robot_weight_2(robot)) or (container_weight_6(container) and robot_weight_0(robot)))\n    ]\n    effects = [\n      robot_carrying(robot, container) := true\n      container_in_pile(container, pile) := false\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then container_in_robot_slot_1(robot, container) := true\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then robot_has_container_1(robot) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then container_in_robot_slot_2(robot, container) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then robot_has_container_2(robot) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then container_in_robot_slot_3(robot, container) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then robot_has_container_3(robot) := true\n      if (robot_has_container_1(robot) or robot_has_container_2(robot) or robot_has_container_3(robot)) then robot_free(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_2(robot) := true\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_4(robot) := true\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_4(robot) := false\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_6(robot) := true\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_4(robot) := true\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_6(robot) := true\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_6(robot) := true\n      container_on_top_of_pile(container, pile) := false\n      if container_under_in_pile(c1, container, pile) then container_on_top_of_pile(c1, pile) := true\n      if container_under_in_pile(c1, container, pile) then container_under_in_pile(c1, container, pile) := false\n      if container_under_in_pile(c2, container, pile) then container_on_top_of_pile(c2, pile) := true\n      if container_under_in_pile(c2, container, pile) then container_under_in_pile(c2, container, pile) := false\n      if container_under_in_pile(c3, container, pile) then container_on_top_of_pile(c3, pile) := true\n      if container_under_in_pile(c3, container, pile) then container_under_in_pile(c3, container, pile) := false\n      if container_under_in_pile(c4, container, pile) then container_on_top_of_pile(c4, pile) := true\n      if container_under_in_pile(c4, container, pile) then container_under_in_pile(c4, container, pile) := false\n      if container_under_in_pile(c5, container, pile) then container_on_top_of_pile(c5, pile) := true\n      if container_under_in_pile(c5, container, pile) then container_under_in_pile(c5, container, pile) := false\n      if container_under_in_pile(c6, container, pile) then container_on_top_of_pile(c6, pile) := true\n      if container_under_in_pile(c6, container, pile) then container_under_in_pile(c6, container, pile) := false\n      if container_under_in_pile(c7, container, pile) then container_on_top_of_pile(c7, pile) := true\n      if container_under_in_pile(c7, container, pile) then container_under_in_pile(c7, container, pile) := false\n      if container_under_in_pile(c8, container, pile) then container_on_top_of_pile(c8, pile) := true\n      if container_under_in_pile(c8, container, pile) then container_under_in_pile(c8, container, pile) := false\n    ]\n  } is not an AND or a FLUENT"
      },
      {
        "run": 1,
        "success": false,
        "solve_time": Infinity,
        "plan_length": 0,
        "status": "ERROR: In precondition: ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot)))) of action: action pickup(Robot robot, Container container, Pile pile, Dock dock) {\n    preconditions = [\n      robot_at(robot, dock)\n      pile_at_dock(pile, dock)\n      container_in_pile(container, pile)\n      container_on_top_of_pile(container, pile)\n      ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot))))\n      ((container_weight_2(container) and robot_weight_0(robot)) or (container_weight_2(container) and robot_weight_2(robot)) or (container_weight_2(container) and robot_weight_4(robot)) or (container_weight_4(container) and robot_weight_0(robot)) or (container_weight_4(container) and robot_weight_2(robot)) or (container_weight_6(container) and robot_weight_0(robot)))\n    ]\n    effects = [\n      robot_carrying(robot, container) := true\n      container_in_pile(container, pile) := false\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then container_in_robot_slot_1(robot, container) := true\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then robot_has_container_1(robot) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then container_in_robot_slot_2(robot, container) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then robot_has_container_2(robot) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then container_in_robot_slot_3(robot, container) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then robot_has_container_3(robot) := true\n      if (robot_has_container_1(robot) or robot_has_container_2(robot) or robot_has_container_3(robot)) then robot_free(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_2(robot) := true\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_4(robot) := true\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_4(robot) := false\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_6(robot) := true\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_4(robot) := true\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_6(robot) := true\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_6(robot) := true\n      container_on_top_of_pile(container, pile) := false\n      if container_under_in_pile(c1, container, pile) then container_on_top_of_pile(c1, pile) := true\n      if container_under_in_pile(c1, container, pile) then container_under_in_pile(c1, container, pile) := false\n      if container_under_in_pile(c2, container, pile) then container_on_top_of_pile(c2, pile) := true\n      if container_under_in_pile(c2, container, pile) then container_under_in_pile(c2, container, pile) := false\n      if container_under_in_pile(c3, container, pile) then container_on_top_of_pile(c3, pile) := true\n      if container_under_in_pile(c3, container, pile) then container_under_in_pile(c3, container, pile) := false\n      if container_under_in_pile(c4, container, pile) then container_on_top_of_pile(c4, pile) := true\n      if container_under_in_pile(c4, container, pile) then container_under_in_pile(c4, container, pile) := false\n      if container_under_in_pile(c5, container, pile) then container_on_top_of_pile(c5, pile) := true\n      if container_under_in_pile(c5, container, pile) then container_under_in_pile(c5, container, pile) := false\n      if container_under_in_pile(c6, container, pile) then container_on_top_of_pile(c6, pile) := true\n      if container_under_in_pile(c6, container, pile) then container_under_in_pile(c6, container, pile) := false\n      if container_under_in_pile(c7, container, pile) then container_on_top_of_pile(c7, pile) := true\n      if container_under_in_pile(c7, container, pile) then container_under_in_pile(c7, container, pile) := false\n      if container_under_in_pile(c8, container, pile) then container_on_top_of_pile(c8, pile) := true\n      if container_under_in_pile(c8, container, pile) then container_under_in_pile(c8, container, pile) := false\n    ]\n  } is not an AND or a FLUENT"
      },
      {
        "run": 2,
        "success": false,
        "solve_time": Infinity,
        "plan_length": 0,
        "status": "ERROR: In precondition: ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot)))) of action: action pickup(Robot robot, Container container, Pile pile, Dock dock) {\n    preconditions = [\n      robot_at(robot, dock)\n      pile_at_dock(pile, dock)\n      container_in_pile(container, pile)\n      container_on_top_of_pile(container, pile)\n      ((robot_can_carry_1(robot) and (not robot_has_container_1(robot))) or (robot_can_carry_2(robot) and (not robot_has_container_2(robot))) or (robot_can_carry_3(robot) and (not robot_has_container_3(robot))))\n      ((container_weight_2(container) and robot_weight_0(robot)) or (container_weight_2(container) and robot_weight_2(robot)) or (container_weight_2(container) and robot_weight_4(robot)) or (container_weight_4(container) and robot_weight_0(robot)) or (container_weight_4(container) and robot_weight_2(robot)) or (container_weight_6(container) and robot_weight_0(robot)))\n    ]\n    effects = [\n      robot_carrying(robot, container) := true\n      container_in_pile(container, pile) := false\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then container_in_robot_slot_1(robot, container) := true\n      if (robot_can_carry_1(robot) and (not robot_has_container_1(robot))) then robot_has_container_1(robot) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then container_in_robot_slot_2(robot, container) := true\n      if (robot_can_carry_2(robot) and (not robot_has_container_2(robot)) and robot_has_container_1(robot)) then robot_has_container_2(robot) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then container_in_robot_slot_3(robot, container) := true\n      if (robot_can_carry_3(robot) and (not robot_has_container_3(robot)) and robot_has_container_1(robot) and robot_has_container_2(robot)) then robot_has_container_3(robot) := true\n      if (robot_has_container_1(robot) or robot_has_container_2(robot) or robot_has_container_3(robot)) then robot_free(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_2(container) and robot_weight_0(robot)) then robot_weight_2(robot) := true\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_2(container) and robot_weight_2(robot)) then robot_weight_4(robot) := true\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_4(robot) := false\n      if (container_weight_2(container) and robot_weight_4(robot)) then robot_weight_6(robot) := true\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_4(container) and robot_weight_0(robot)) then robot_weight_4(robot) := true\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_2(robot) := false\n      if (container_weight_4(container) and robot_weight_2(robot)) then robot_weight_6(robot) := true\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_0(robot) := false\n      if (container_weight_6(container) and robot_weight_0(robot)) then robot_weight_6(robot) := true\n      container_on_top_of_pile(container, pile) := false\n      if container_under_in_pile(c1, container, pile) then container_on_top_of_pile(c1, pile) := true\n      if container_under_in_pile(c1, container, pile) then container_under_in_pile(c1, container, pile) := false\n      if container_under_in_pile(c2, container, pile) then container_on_top_of_pile(c2, pile) := true\n      if container_under_in_pile(c2, container, pile) then container_under_in_pile(c2, container, pile) := false\n      if container_under_in_pile(c3, container, pile) then container_on_top_of_pile(c3, pile) := true\n      if container_under_in_pile(c3, container, pile) then container_under_in_pile(c3, container, pile) := false\n      if container_under_in_pile(c4, container, pile) then container_on_top_of_pile(c4, pile) := true\n      if container_under_in_pile(c4, container, pile) then container_under_in_pile(c4, container, pile) := false\n      if container_under_in_pile(c5, container, pile) then container_on_top_of_pile(c5, pile) := true\n      if container_under_in_pile(c5, container, pile) then container_under_in_pile(c5, container, pile) := false\n      if container_under_in_pile(c6, container, pile) then container_on_top_of_pile(c6, pile) := true\n      if container_under_in_pile(c6, container, pile) then container_under_in_pile(c6, container, pile) := false\n      if container_under_in_pile(c7, container, pile) then container_on_top_of_pile(c7, pile) := true\n      if container_under_in_pile(c7, container, pile) then container_under_in_pile(c7, container, pile) := false\n      if container_under_in_pile(c8, container, pile) then container_on_top_of_pile(c8, pile) := true\n      if container_under_in_pile(c8, container, pile) then container_under_in_pile(c8, container, pile) := false\n    ]\n  } is not an AND or a FLUENT"
      }
    ],
    "summary": {
      "success_rate": 0,
      "avg_solve_time": Infinity,
      "std_solve_time": 0,
      "avg_plan_length": 0,
      "std_plan_length": 0,
      "min_solve_time": Infinity,
      "max_solve_time": 0
    }
  }
]